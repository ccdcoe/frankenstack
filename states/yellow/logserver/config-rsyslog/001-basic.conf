template(
  name="syslog-json-fileformat"
  type="list"
  option.json="on") {
    constant(value="{")
    constant(value="\"@timestamp\":\"")            property(name="timegenerated" dateFormat="rfc3339")
    constant(value="\",\"message\":\"")            property(name="msg")
    constant(value="\",\"host\":\"")               property(name="hostname")
    constant(value="\",\"severity\":\"")           property(name="syslogseverity-text")
    constant(value="\",\"facility\":\"")           property(name="syslogfacility-text")
    constant(value="\",\"syslogtag\":\"")          property(name="syslogtag")
    constant(value="\",\"program\":\"")            property(name="programname")
    constant(value="\",\"ip\":\"")                 property(name="fromhost-ip")
    constant(value="\"}\n")
}
template(
  name="syslog-json"
  type="list"
  option.json="on") {
    constant(value="{")
    constant(value="\"@timestamp\":\"")            property(name="timegenerated" dateFormat="rfc3339")
    constant(value="\",\"message\":\"")            property(name="msg")
    constant(value="\",\"host\":\"")               property(name="hostname")
    constant(value="\",\"severity\":\"")           property(name="syslogseverity-text")
    constant(value="\",\"facility\":\"")           property(name="syslogfacility-text")
    constant(value="\",\"syslogtag\":\"")          property(name="syslogtag")
    constant(value="\",\"program\":\"")            property(name="programname")
    constant(value="\",\"ip\":\"")                 property(name="fromhost-ip")
    constant(value="\"}")
}

#module(load="mmnormalize")
module(load="mmjsonparse")
module(load="omkafka")
module(load="omelasticsearch")

{% for ruleset in params.rulesets %}
# BEGIN RULESET {{ruleset.name}}
template(
  name="{{ruleset.name}}-local-unstruct"
  type="list") {
  constant(value="/var/log/{{ruleset.name}}/syslog/")
  property(name="timereported" dateFormat="rfc3339" position.from="1" position.to="4")
  constant(value=".")
  property(name="timereported" dateFormat="rfc3339" position.from="6" position.to="7")
  constant(value=".")
  property(name="timereported" dateFormat="rfc3339" position.from="9" position.to="10")
  {%- if 'hourly' in ruleset and ruleset.hourly -%}
  constant(value=".")
  property(name="timereported" dateFormat="rfc3339" position.from="12" position.to="13")
  {%- endif %}
}
{% if 'byhost' in ruleset and ruleset.byhost %}
template(
  name="{{ruleset.name}}-local-byhost"
  type="list") {
  constant(value="/var/log/{{ruleset.name}}/hosts/")
  property(name="hostname")
  constant(value="/")
  property(name="timereported" dateFormat="rfc3339" position.from="1" position.to="4")
  constant(value=".")
  property(name="timereported" dateFormat="rfc3339" position.from="6" position.to="7")
  constant(value=".")
  property(name="timereported" dateFormat="rfc3339" position.from="9" position.to="10")
  {%- if 'hourly' in ruleset and ruleset.hourly -%}
  constant(value=".")
  property(name="timereported" dateFormat="rfc3339" position.from="12" position.to="13")
  {%- endif %}
}
{% endif %}
{% if 'json'in ruleset and ruleset.json %}
template(
  name="{{ruleset.name}}-local-json"
  type="list") {
  constant(value="/var/log/{{ruleset.name}}/json/")
  property(name="timereported" dateFormat="rfc3339" position.from="1" position.to="4")
  constant(value=".")
  property(name="timereported" dateFormat="rfc3339" position.from="6" position.to="7")
  constant(value=".")
  property(name="timereported" dateFormat="rfc3339" position.from="9" position.to="10")
  {%- if 'hourly' in ruleset and ruleset.hourly -%}
  constant(value=".")
  property(name="timereported" dateFormat="rfc3339" position.from="12" position.to="13")
  {%- endif %}
}
{% endif %}

ruleset(name="{{ruleset.name}}"){
  action( type="omfile" dirCreateMode="0750" FileCreateMode="0644" DynaFile="{{ruleset.name}}-local-unstruct")
{%- if 'byhost' in ruleset and ruleset.byhost %}
  action( type="omfile" dirCreateMode="0750" FileCreateMode="0644" DynaFile="{{ruleset.name}}-local-byhost")
{% endif %}
{%- if 'kafka' in ruleset and ruleset.kafka.enabled %}
  action( broker=["{{ruleset.kafka.brokers|join("\",\"") }}"] type="omkafka" topic="{{ruleset.kafka.topic}}" partitions.auto="on" confParam="compression.codec=snappy" template="syslog-json" resubmitOnFailure="on" KeepFailedMessages="on")
{% endif %}
{%- if 'json'in ruleset and ruleset.json %}
  action( type="omfile" dirCreateMode="0750" FileCreateMode="0644" Template="syslog-json-fileformat" DynaFile="{{ruleset.name}}-local-json")
{% endif %}
}
# END RULESET {{ruleset.name}}
{% endfor %}

{% if 'udp' in params.listeners %}
module(load="imudp") # needs to be done just once
{% for port in params.listeners.udp %}
input(type="imudp" port="{{port.port}}" {%- if 'ruleset' in port -%} ruleset="{{port.ruleset}}"{%-endif-%})
{% endfor %}
{% endif %}

{% if 'tcp' in params.listeners %}
module(load="imtcp") # needs to be done just once
{% for port in params.listeners.tcp %}
input(type="imtcp" port="{{port.port}}" {%- if 'ruleset' in port %} ruleset="{{port.ruleset}}"{%-endif%})
{% endfor %}
{% endif %}
