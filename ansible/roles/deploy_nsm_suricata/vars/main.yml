---
suricata_config:
  vars:
    address-groups:
      HOME_NET: "[{{ suricata_home_nets | join(',') }}]"
      EXTERNAL_NET: "!$HOME_NET"
      HTTP_SERVERS: "$HOME_NET"
      SMTP_SERVERS: "$HOME_NET"
      SQL_SERVERS: "$HOME_NET"
      DNS_SERVERS: "$HOME_NET"
      TELNET_SERVERS: "$HOME_NET"
      AIM_SERVERS: "$EXTERNAL_NET"
      DC_SERVERS: "$HOME_NET"
      DNP3_SERVER: "$HOME_NET"
      DNP3_CLIENT: "$HOME_NET"
      MODBUS_CLIENT: "$HOME_NET"
      MODBUS_SERVER: "$HOME_NET"
      ENIP_CLIENT: "$HOME_NET"
      ENIP_SERVER: "$HOME_NET"
    port-groups:
      HTTP_PORTS: "80"
      SHELLCODE_PORTS: "!80"
      ORACLE_PORTS: 1521
      SSH_PORTS: 22
      DNP3_PORTS: 20000
      MODBUS_PORTS: 502
      FILE_DATA_PORTS: "[$HTTP_PORTS,110,143]"
      FTP_PORTS: 21
      VXLAN_PORTS: 4789
  default-log-dir: "{{ suricata_log_dir }}"
  stats:
    enabled: yes
    interval: 8
  outputs: "{{ suricata_outputs }}"
  logging:
    default-log-level: notice
    outputs:
    - console:
        enabled: yes
    - file:
        enabled: yes
        level: info
        filename: suricata.log
    - syslog:
        enabled: no
        facility: local5
        format: "[%i] <%d> -- "

  af-packet: "{{ suricata_af_packet }}"

  pcap:
    - interface: eth0
    - interface: default
  pcap-file:
    checksum-checks: auto
  app-layer:
    protocols:
      krb5:
        enabled: yes
      snmp:
        enabled: yes
      ikev2:
        enabled: yes
      tls:
        enabled: yes
        encryption-handling: "{{'bypass' if suricata_bypass_encryption else 'default'}}"
        detection-ports:
          dp: 443
        ja3-fingerprints: auto
      dcerpc:
        enabled: yes
      ftp:
        enabled: yes
      rdp:
        enabled: no
      ssh:
        enabled: yes
      smtp:
        enabled: yes
        raw-extraction: no
        mime:
          decode-mime: yes
          decode-base64: yes
          decode-quoted-printable: yes
          header-value-depth: 2000
          extract-urls: yes
          body-md5: no
        inspected-tracker:
          content-limit: 100000
          content-inspect-min-size: 32768
          content-inspect-window: 4096
      imap:
        enabled: detection-only
      smb:
        enabled: yes
        detection-ports:
          dp: 139, 445
      nfs:
        enabled: yes
      tftp:
        enabled: yes
      dns:
        tcp:
          enabled: yes
          detection-ports:
            dp: 53
        udp:
          enabled: yes
          detection-ports:
            dp: 53
      http:
        enabled: yes
        libhtp:
           default-config:
             personality: IDS
             request-body-limit: 100kb
             response-body-limit: 100kb
             request-body-minimal-inspect-size: 32kb
             request-body-inspect-window: 4kb
             response-body-minimal-inspect-size: 40kb
             response-body-inspect-window: 16kb
             response-body-decompress-layer-limit: 2
             http-body-inline: auto
             swf-decompression:
               enabled: yes
               type: both
               compress-depth: 0
               decompress-depth: 0
             double-decode-path: no
             double-decode-query: no
           server-config:
      modbus:
        enabled: no
        detection-ports:
          dp: 502
        stream-depth: 0
      dnp3:
        enabled: no
        detection-ports:
          dp: 20000
      enip:
        enabled: yes
        detection-ports:
          dp: 44818
          sp: 44818
      ntp:
        enabled: yes
      dhcp:
        enabled: yes
      sip:
        enabled: no
  asn1-max-frames: 256
  sensor-name: "{{ suricata.sensor_name if 'sensor_name' in suricata else suricata.name }}"
  pid-file: /var/run/suricata.pid
  daemon-directory: "/"
  umask: 022

  coredump:
    max-dump: unlimited
  host-mode: auto
  max-pending-packets: 1024
  runmode: autofp
  autofp-scheduler: hash
  default-packet-size: 1514
  unix-command:
    enabled: auto
    filename: "{{ suricata_socket_dir }}/suricata-command.socket"
  legacy:
    uricontent: enabled
  engine-analysis:
    rules-fast-pattern: yes
    rules: yes
  pcre:
    match-limit: 3500
    match-limit-recursion: 1500
  host-os-policy:
    windows: [0.0.0.0/0]
    bsd: []
    bsd-right: []
    old-linux: []
    linux: []
    old-solaris: []
    solaris: []
    hpux10: []
    hpux11: []
    irix: []
    macos: []
    vista: []
    windows2k3: []
  defrag:
    memcap: 32mb
    hash-size: 65536
    trackers: 65535 # number of defragmented flows to follow
    max-frags: 65535 # number of fragments to keep (higher than trackers)
    prealloc: yes
    timeout: 60
  flow:
    memcap: 128mb
    hash-size: 65536
    prealloc: 10000
    emergency-recovery: 30
  vlan:
    use-for-tracking: true
  flow-timeouts:
    default:
      new: 30
      established: 300
      closed: 0
      bypassed: 100
      emergency-new: 10
      emergency-established: 100
      emergency-closed: 0
      emergency-bypassed: 50
    tcp:
      new: 60
      established: 600
      closed: 60
      bypassed: 100
      emergency-new: 5
      emergency-established: 100
      emergency-closed: 10
      emergency-bypassed: 50
    udp:
      new: 30
      established: 300
      bypassed: 100
      emergency-new: 10
      emergency-established: 100
      emergency-bypassed: 50
    icmp:
      new: 30
      established: 300
      bypassed: 100
      emergency-new: 10
      emergency-established: 100
      emergency-bypassed: 50
  stream:
    memcap: 64mb
    checksum-validation: yes      # reject wrong csums
    inline: auto                  # auto will use inline mode in IPS mode, yes or no set it statically
    reassembly:
      memcap: 256mb
      depth: 1mb                  # reassemble 1mb into a stream
      toserver-chunk-size: 2560
      toclient-chunk-size: 2560
      randomize-chunk-size: yes
      #randomize-chunk-range: 10
      #raw: yes
      #segment-prealloc: 2048
      #check-overlap-different-data: true
  host:
    hash-size: 4096
    prealloc: 1000
    memcap: 32mb
  decoder:
    teredo:
      enabled: true
    vxlan:
      enabled: true
      ports: $VXLAN_PORTS # syntax: '8472, 4789'
  detect:
    profile: medium
    custom-values:
      toclient-groups: 3
      toserver-groups: 25
    sgh-mpm-context: auto
    inspection-recursion-limit: 3000
    prefilter:
      default: mpm
    grouping:
    profiling:
      grouping:
        dump-to-disk: false
        include-rules: false      # very verbose
        include-mpm-stats: false
  mpm-algo: auto
  spm-algo: auto
  threading:
    set-cpu-affinity: no
    cpu-affinity:
      - management-cpu-set:
          cpu: [ 0 ]  # include only these CPUs in affinity settings
      - receive-cpu-set:
          cpu: [ 0 ]  # include only these CPUs in affinity settings
      - worker-cpu-set:
          cpu: [ "all" ]
          mode: "exclusive"
          prio:
            low: [ 0 ]
            medium: [ "1-2" ]
            high: [ 3 ]
            default: "medium"
    detect-thread-ratio: 1.0
  luajit:
    states: 128
  profiling:
    rules:
      enabled: yes
      filename: rule_perf.log
      append: yes
      limit: 10
      json: yes
    keywords:
      enabled: yes
      filename: keyword_perf.log
      append: yes
    prefilter:
      enabled: yes
      filename: prefilter_perf.log
      append: yes
    rulegroups:
      enabled: yes
      filename: rule_group_perf.log
      append: yes
    packets:
      enabled: no
      filename: packet_stats.log
      append: yes
      csv:
        enabled: no
        filename: packet_stats.csv
    locks:
      enabled: no
      filename: lock_stats.log
      append: yes
    pcap-log:
      enabled: no
      filename: pcaplog_stats.log
      append: yes
  nfq:
  nflog:
    - group: 2
      buffer-size: 18432
    - group: default
      qthreshold: 1
      qtimeout: 100
      max-size: 20000
  capture:
  netmap:
   - interface: eth2
   - interface: default
  pfring:
    - interface: eth0
      threads: auto
      cluster-id: 99
      cluster-type: cluster_flow
    - interface: default
  ipfw:
  napatech:
    streams: ["0-3"]
    auto-config: yes
    ports: [all]
    hashmode: hash5tuplesorted

  default-rule-path: "{{ suricata_rule_dir }}"
  rule-files: "{{ suricata_rules }}"

  classification-file: /etc/suricata/classification.config
  reference-config-file: /etc/suricata/reference.config

suricata_update_config:
  ignore:
    - "*deleted.rules"
  sources: "{{ suricata.rule.sources }}"
  local: []
  disable-conf: /etc/disable.conf
