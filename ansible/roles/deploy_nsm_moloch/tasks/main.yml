---
- set_fact:
    moloch_container_name: "{{ moloch.name }}"

- name: Create host folders for moloch configs and rules
  file:
    path: "{{ host_container_root }}/{{ item }}"
    state: directory
    mode: 0750
  loop:
    - "{{ moloch.name }}"
    - "{{ moloch.name }}/config"

- name: pull custom images
  docker_image:
    name: "{{ item }}"
    source: pull
    force_source: yes
  retries: 15
  delay: 2
  register: result
  until: not result.failed
  loop:
    - "{{ moloch_image.capture }}"
    - "{{ moloch_image.viewer }}"
    - "{{ moloch_image.wise }}"

- name: Create pcap directory on host
  file:
    path: "{{ moloch.host_pcap_dir }}"
    state: directory
    mode: 0750
    owner: "{{ moloch.container_uid | default('1000') }}"
  when: moloch.create_host_pcap_dir | default('false')

- name: Deploy moloch rules file on host
  template:
    src: moloch-rules.j2
    dest: "{{ host_container_root }}/{{ moloch.name }}/config/moloch-rules.yml"
    mode: 0644
  notify:
    - restart moloch capture

- name: Deploy moloch config for capture on host
  template:
    src: moloch-config.j2
    dest: "{{ host_container_root }}/{{ moloch.name }}/config/moloch-capture.ini"
    mode: 0644
  vars:
    elasticsearch: "{{ moloch.capture.elasticsearch }}"
    wise: "{{ moloch.capture.wise | default(None) }}"
  notify:
    - restart moloch capture

- name: Deploy moloch config for viewer in container
  template:
    src: moloch-config.j2
    dest: "{{ host_container_root }}/{{ moloch.name }}/config/moloch-viewer.ini"
    mode: 0644
  vars:
    elasticsearch: "{{ moloch.viewer.elasticsearch }}"
    wise: "{{ moloch.viewer.wise | default(None) }}"
  notify:
    - restart moloch viewer

- name: Deploy wise config
  template:
    src: wise.j2
    dest: "{{ host_container_root }}/{{ moloch.name }}/config/wise.ini"
    mode: 0644
  vars:
    wiseconfig: "{{ moloch.wise.config | default({}) }}"
  notify:
    - restart moloch wise

- set_fact:
    capture_mounts:
      - "{{ host_container_root }}/{{moloch.name}}/config/moloch-rules.yml:/data/moloch/etc/rules.yml:ro"
      - "{{ host_container_root }}/{{ moloch.name }}/config/moloch-capture.ini:/data/moloch/etc/config.ini:ro"
      - "{{ moloch.host_pcap_dir }}:{{ moloch_internal_data_dir }}:rw"

- name: Run container for moloch capture
  docker_container:
    name: "{{ moloch.name }}-capture"
    hostname: "{{ moloch.name }}"
    image: "{{ moloch_image.capture }}"
    state: started
    network_mode: host
    restart_policy: unless-stopped
    privileged: yes 
    ulimits:
      - nofile:262144:262144
    volumes: "{{ capture_mounts + [ '%s:%s:ro' | format(meerkat.data_vol, moloch.suricata.container_dir) ] if meerkat.data_vol is defined else capture_mounts }}"
    env:
      # Needed for initializing absent db via entrypoint
      MOLOCH_ELASTICSEARCH: "{{ moloch.capture.elasticsearch[0] }}"
      MOLOCH_DB_SHARDS: "{{ moloch.db.shards }}"
      MOLOCH_DB_REPLICAS: "{{ moloch.db.replicas }}"
      MOLOCH_DB_SHARDS_PER_NODE: "{{ moloch.db.shards_per_node }}"

- name: Run container for moloch-viewer
  docker_container:
    name: "{{ moloch.name }}-viewer"
    hostname: "{{ moloch.name }}"
    image: "{{ moloch_image.viewer }}"
    state: started
    restart_policy: unless-stopped
    published_ports: "{{ moloch.viewer.expose | default([]) }}"
    networks:
      - name: "{{ moloch.viewer.network }}"
    volumes:
      - "{{ host_container_root }}/{{ moloch.name }}/config/moloch-viewer.ini:/data/moloch/etc/config.ini:ro"
      - "{{ moloch.host_pcap_dir }}:{{ moloch_internal_data_dir }}:rw"
    env:
      # Needed for initializing absent db via entrypoint
      MOLOCH_ELASTICSEARCH: "{{ moloch.viewer.elasticsearch[0] }}"
      MOLOCH_DB_SHARDS: "{{ moloch.db.shards }}"
      MOLOCH_DB_REPLICAS: "{{ moloch.db.replicas }}"
      MOLOCH_DB_SHARDS_PER_NODE: "{{ moloch.db.shards_per_node }}"

- name: Run container for moloch-wise
  docker_container:
    name: "{{ moloch.name }}-wise"
    hostname: "{{ moloch.name }}"
    image: "{{ moloch_image.wise }}"
    state: started
    restart_policy: unless-stopped
    networks:
      - name: "{{ moloch.viewer.network }}"
    published_ports:
      - "{{ moloch.wise.published_port }}:8081"
    volumes:
      - "{{ host_container_root }}/{{ moloch.name }}/config/wise.ini:/data/moloch/etc/wise.ini:ro"

- name: Ensure moloch users
  docker_container:
    name: "{{ moloch.name }}-viewer-user-add-{{item.username}}"
    hostname: "{{ moloch.name }}"
    image: "{{ moloch_image.viewer }}"
    auto_remove: no
    detach: no
    networks:
      - name: "{{ moloch.viewer.network }}"
    volumes:
      - "{{ host_container_root }}/{{ moloch.name }}/config/moloch-viewer.ini:/data/moloch/etc/config.ini:ro"
      - "{{ moloch.host_pcap_dir }}:{{ moloch_internal_data_dir }}:rw"
    entrypoint:
      - node
      - addUser.js 
      - -c ../etc/config.ini
      - "{{ item.username }} \"{{ item.pretty }}\" {{ item.password }} {%if item.admin %}--admin{%endif%}"
  loop: "{{ moloch_users }}"

- name: Clean up temp containers
  docker_container:
    name: "{{ moloch.name }}-viewer-user-add-{{item.username}}"
    state: absent
  loop: "{{ moloch_users }}"

