---
- name: pull elastic image
  docker_image:
    name: "{{ elasticsearch_image }}"
    source: pull
  retries: 15
  delay: 2
  register: result
  until: not result.failed

# multi-cluster deploy - each host may run elastic containers for N clusters
# host must be in elasticsearch hostgroup
- name: Deploy docker containers for elastic cluster
  docker_container:
    name: "{{ item.name }}-{{ item.node_id | mandatory }}-node"
    hostname: "{{ item.name }}-{{ item.node_id | mandatory }}-node"
    image: "{{ elasticsearch_image }}"
    volumes:
      - "{{ item.name }}-{{ item.node_id | mandatory }}-node-data:/usr/share/elasticsearch/data:rw"
    purge_networks: yes
    state: started
    restart_policy: unless-stopped
    network_mode: "{{ item.host_network | default(false) | ternary('host', 'bridge', 'none') }}"
    networks: "{{ item.networks | default([]) if not item.host_network | default(false) else [] }}"
    ulimits:
      - nofile:262144:262144
    published_ports: "{{ item.expose_elastic | default([]) }}"
    env:
      cluster.name: "{{ item.pretty | default(item.name | mandatory) }}"
      cluster.initial_master_nodes: "{{ item.cluster_initial_master_nodes | mandatory | join(',') }}"
      discovery.seed_hosts: "{{ item.discovery_seed_hosts | mandatory | join(',') }}"
      node.name: "{{ item.node_id }}"
      node.master: "true"
      node.ingest: "true"
      node.data: "true"
      node.attr.datacenter: "{{ item.attr_datacenter | default('default') }}"
      node.attr.box_type: "{{ item.attr_box_type | default('hot') }}"
      ES_JAVA_OPTS: "-Xms{{ item.memory_gb.node }}g -Xmx{{ item.memory_gb.node }}g"
  loop: "{{ elastic_clusters }}"
  when: not item.singlehost and inventory_hostname in item.hosts | default([])

# Simple singlehost deploy, no cluster setup, no hostgroup check
# Still a loop, so multiple elastics could be created, each functioning as a separate single-node cluster
- name: Deploy docker container for elastic node
  docker_container:
    name: "{{ item.name }}-0"
    hostname: "{{ item.name }}-0"
    image: "{{ elasticsearch_image }}"
    volumes:
      - "data-{{ item.name }}:/usr/share/elasticsearch/data:rw"
    purge_networks: yes
    state: started
    restart_policy: unless-stopped
    networks: "{{ item.networks | default([]) }}"
    ulimits:
      - nofile:262144:262144
    published_ports: "{{ item.expose_elastic | default([]) }}"
    env:
      cluster.name: "{{ item.pretty | default(item.name | mandatory) }}"
      node.name: "{{ item.name }}-0"
      node.master: "true"
      node.ingest: "true"
      node.data: "true"
      discovery.type: single-node
      ES_JAVA_OPTS: "-Xms{{item.memory_gb.node}}g -Xmx{{item.memory_gb.node}}g"
  when: item.singlehost
  loop: "{{ elastic_clusters }}"
