---
- name: Create host folders for beat configs
  file:
    path: "{{ host_container_root | mandatory }}/{{ item.name }}"
    state: directory
    mode: 0755
  loop: "{{ elastic_clusters }}"

# Filebeat
- name: Create filebeat configs
  template:
    src: beat.j2
    dest: "{{ host_container_root | mandatory }}/{{ item.name }}/filebeat.yml"
  loop: "{{ elastic_clusters }}"
  vars:
    elastic_node_id: "{{ '0' if item.singlehost | default(false) else item.node_id | mandatory }}"
    elastic_container_name: "{{ item.name }}-{{ elastic_node_id }}-node"
    elastic_internal_host: "http://{{ elastic_container_name }}:9200"
    elastic_external_host: "http://127.0.0.1:9200"
    kibana_container_name: "{{ item.name }}-{{ elastic_node_id }}-kibana"
    kibana_internal_host: "http://{{ kibana_container_name }}:5601"
    kibana_external_host: "http://127.0.0.1:5601"
    elastic_beats_kibana_host: "{{ kibana_external_host if item.host_network | default(false) else kibana_internal_host }}"
    elastic_beats_ela_out_host: "{{ elastic_external_host if item.host_network | default(false) else elastic_internal_host }}"
    structured_data: "{{ elastic_filebeat_config }}"
  tags:
    - beats
    - filebeat
    - dashboards

- name: Set up filebeat dashboards
  docker_container:
    name: "{{ item.name }}-filebeat-dashboard-setup"
    image: "{{ filebeat_image }}"
    networks: "{{ item.networks }}"
    network_mode: "{{ item.host_network | default(false) | ternary('host', 'bridge', 'none') }}"
    volumes:
      - "{{ host_container_root | mandatory }}/{{ item.name }}/filebeat.yml:/etc/beat.yml:ro"
    command: "-c /etc/beat.yml setup --dashboards"
    detach: no
    auto_remove: no
  register: filebeat_dashboard_setup
  retries: "{{ retries | default(6) }}"
  delay: 10
  until: not filebeat_dashboard_setup.failed
  loop: "{{ elastic_clusters }}"
  run_once: true
  tags:
    - beats
    - filebeat
    - dashboards

- name: Filebeat cleanup
  docker_container:
    name: "{{ item.name }}-filebeat-dashboard-setup"
    state: absent
  loop: "{{ elastic_clusters }}"
  tags:
    - beats
    - filebeat
    - dashboards

# Packetbeat
- name: Create packetbeat configs
  template:
    src: beat.j2
    dest: "{{ host_container_root | mandatory }}/{{ item.name }}/packetbeat.yml"
  loop: "{{ elastic_clusters }}"
  vars:
    elastic_node_id: "{{ '0' if item.singlehost | default(false) else item.node_id | mandatory }}"
    elastic_container_name: "{{ item.name }}-{{ elastic_node_id }}-node"
    elastic_internal_host: "http://{{ elastic_container_name }}:9200"
    elastic_external_host: "http://127.0.0.1:9200"
    kibana_container_name: "{{ item.name }}-{{ elastic_node_id }}-kibana"
    kibana_internal_host: "http://{{ kibana_container_name }}:5601"
    kibana_external_host: "http://127.0.0.1:5601"
    elastic_beats_kibana_host: "{{ kibana_external_host if item.host_network | default(false) else kibana_internal_host }}"
    elastic_beats_ela_out_host: "{{ elastic_external_host if item.host_network | default(false) else elastic_internal_host }}"
    structured_data: "{{ elastic_filebeat_config }}"
  tags:
    - beats
    - packetbeat
    - dashboards

- name: Set up packetbeat dashboards
  docker_container:
    name: "{{ item.name }}-packetbeat-dashboard-setup"
    image: "{{ packetbeat_image }}"
    networks: "{{ item.networks }}"
    network_mode: "{{ item.host_network | default(false) | ternary('host', 'bridge', 'none') }}"
    volumes:
      - "{{ host_container_root | mandatory }}/{{ item.name }}/packetbeat.yml:/etc/beat.yml:ro"
    command: "-c /etc/beat.yml setup --dashboards"
    capabilities:
      - net_admin
    detach: no
    auto_remove: no
  register: filebeat_dashboard_setup
  retries: "{{ retries | default(6) }}"
  delay: 5
  until: not filebeat_dashboard_setup.failed
  loop: "{{ elastic_clusters }}"
  run_once: true
  tags:
    - beats
    - packetbeat
    - dashboards

- name: Packetbeat cleanup
  docker_container:
    name: "{{ item.name }}-packetbeat-dashboard-setup"
    state: absent
  loop: "{{ elastic_clusters }}"
  tags:
    - beats
    - packetbeat
    - dashboards

# Auditbeat
- name: Create auditbeat configs
  template:
    src: beat.j2
    dest: "{{ host_container_root | mandatory }}/{{ item.name }}/auditbeat.yml"
  loop: "{{ elastic_clusters }}"
  vars:
    elastic_node_id: "{{ '0' if item.singlehost | default(false) else item.node_id | mandatory }}"
    elastic_container_name: "{{ item.name }}-{{ elastic_node_id }}-node"
    elastic_internal_host: "http://{{ elastic_container_name }}:9200"
    elastic_external_host: "http://127.0.0.1:9200"
    kibana_container_name: "{{ item.name }}-{{ elastic_node_id }}-kibana"
    kibana_internal_host: "http://{{ kibana_container_name }}:5601"
    kibana_external_host: "http://127.0.0.1:5601"
    elastic_beats_kibana_host: "{{ kibana_external_host if item.host_network | default(false) else kibana_internal_host }}"
    elastic_beats_ela_out_host: "{{ elastic_external_host if item.host_network | default(false) else elastic_internal_host }}"
    structured_data: "{{ elastic_filebeat_config | combine(elastic_auditbeat_modules) }}"
  tags:
    - beats
    - auditbeat
    - dashboards

- name: Set up auditbeat dashboards
  docker_container:
    name: "{{ item.name }}-auditbeat-dashboard-setup"
    image: "{{ auditbeat_image }}"
    networks: "{{ item.networks }}"
    network_mode: "{{ item.host_network | default(false) | ternary('host', 'bridge', 'none') }}"
    volumes:
      - "{{ host_container_root | mandatory }}/{{ item.name }}/auditbeat.yml:/etc/beat.yml:ro"
    command: "-c /etc/beat.yml setup --dashboards"
    detach: no
    auto_remove: no
  register: filebeat_dashboard_setup
  retries: "{{ retries | default(6) }}"
  delay: 5
  until: not filebeat_dashboard_setup.failed
  loop: "{{ elastic_clusters }}"
  run_once: true
  tags:
    - beats
    - auditbeat
    - dashboards

- name: Auditbeat cleanup
  docker_container:
    name: "{{ item.name }}-packetbeat-dashboard-setup"
    state: absent
  loop: "{{ elastic_clusters }}"
  tags:
    - beats
    - auditbeat
    - dashboards
