- name: pull kibana image
  docker_image:
    name: "{{ kibana_image }}"
    source: pull
  retries: 15
  delay: 2

- name: Deploy docker containers for kibana in elastic cluster
  docker_container:
    name: "{{ item.name }}-kibana-{{ groups[item.hostgroup].index(inventory_hostname) }}"
    hostname: "{{ item.name }}-kibana-{{ groups[item.hostgroup].index(inventory_hostname) }}"
    image: "{{ kibana_image }}"
    purge_networks: yes
    state: started
    restart_policy: unless-stopped
    networks:
      - name: "{{ item.network }}"
    published_ports: "{{ item.expose_kibana | default([]) }}"
    env:
      ELASTICSEARCH_HOSTS: "http://{{ item.name }}-{{ groups[item.hostgroup].index(inventory_hostname) }}:9200"
  loop: "{{ elastic_clusters }}"
  when: not item.singlehost and item.hostgroup in group_names

- name: Deploy docker container for kibana node
  docker_container:
    name: "{{ item.name }}-kibana-0"
    hostname: "{{ item.name }}-kibana-0"
    image: "{{ kibana_image }}"
    purge_networks: yes
    state: started
    restart_policy: unless-stopped
    networks:
      - name: "{{ item.network }}"
    published_ports: "{{ item.expose_kibana | default([]) }}"
    env:
      ELASTICSEARCH_HOSTS: "http://{{ item.name }}-0:9200"
  loop: "{{ elastic_clusters }}"
  when: item.singlehost
